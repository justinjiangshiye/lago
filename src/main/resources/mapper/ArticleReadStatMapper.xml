<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunding.lago.dao.ArticleReadStatMapper" >
  <resultMap id="BaseResultMap" type="com.yunding.lago.bean.ArticleReadStat" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="ArticleId" property="articleid" jdbcType="INTEGER" />
    <result column="UserId" property="userid" jdbcType="INTEGER" />
    <result column="IP" property="ip" jdbcType="VARCHAR" />
    <result column="SessionId" property="sessionid" jdbcType="VARCHAR" />
    <result column="CreatedOn" property="createdon" jdbcType="TIMESTAMP" />
    <result column="RecordStatus" property="recordstatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, ArticleId, UserId, IP, SessionId, CreatedOn, RecordStatus
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ArticleReadStat
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ArticleReadStat
    where Id = #{id,jdbcType=INTEGER} and RecordStatus = 0
  </delete>
  <insert id="insert" parameterType="com.yunding.lago.bean.ArticleReadStat" >
    insert into ArticleReadStat (Id, ArticleId, UserId, 
      IP, SessionId, CreatedOn, 
      RecordStatus)
    values (#{id,jdbcType=INTEGER}, #{articleid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{ip,jdbcType=VARCHAR}, #{sessionid,jdbcType=VARCHAR}, #{createdon,jdbcType=TIMESTAMP}, 
      #{recordstatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yunding.lago.bean.ArticleReadStat" >
    insert into ArticleReadStat
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="articleid != null" >
        ArticleId,
      </if>
      <if test="userid != null" >
        UserId,
      </if>
      <if test="ip != null" >
        IP,
      </if>
      <if test="sessionid != null" >
        SessionId,
      </if>
      <if test="createdon != null" >
        CreatedOn,
      </if>
      <if test="recordstatus != null" >
        RecordStatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleid != null" >
        #{articleid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="sessionid != null" >
        #{sessionid,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null" >
        #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="recordstatus != null" >
        #{recordstatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunding.lago.bean.ArticleReadStat" >
    update ArticleReadStat
    <set >
      <if test="articleid != null" >
        ArticleId = #{articleid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        UserId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        IP = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="sessionid != null" >
        SessionId = #{sessionid,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null" >
        CreatedOn = #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="recordstatus != null" >
        RecordStatus = #{recordstatus,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunding.lago.bean.ArticleReadStat" >
    update ArticleReadStat
    set ArticleId = #{articleid,jdbcType=INTEGER},
      UserId = #{userid,jdbcType=INTEGER},
      IP = #{ip,jdbcType=VARCHAR},
      SessionId = #{sessionid,jdbcType=VARCHAR},
      CreatedOn = #{createdon,jdbcType=TIMESTAMP},
      RecordStatus = #{recordstatus,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>