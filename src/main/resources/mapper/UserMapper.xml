<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunding.lago.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.yunding.lago.bean.User">
		<id column="Id" property="id" jdbcType="INTEGER" />
		<result column="Type" property="type" jdbcType="INTEGER" />
		<result column="LoginId" property="loginid" jdbcType="VARCHAR" />
		<result column="NickName" property="nickname" jdbcType="VARCHAR" />
		<result column="Password" property="password" jdbcType="VARCHAR" />
		<result column="RegisterOn" property="registeron" jdbcType="TIMESTAMP" />
		<result column="LastVisitOn" property="lastvisiton" jdbcType="TIMESTAMP" />
		<result column="CreatedOn" property="createdon" jdbcType="TIMESTAMP" />
		<result column="RecordStatus" property="recordstatus" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.yunding.lago.bean.User"
		extends="BaseResultMap">
		<result column="ProfilePhotoUrl" property="profilephotourl"
			jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		Id, Type, LoginId, NickName, Password, RegisterOn, LastVisitOn,
		CreatedOn, RecordStatus
	</sql>
	<sql id="Blob_Column_List">
		ProfilePhotoUrl
	</sql>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from User
		where Id = #{id,jdbcType=INTEGER} and RecordStatus = 0
	</select>
	<select id="selectByLoginId" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from User
		where LoginId = #{loginid,jdbcType=VARCHAR} and RecordStatus = 0
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from User
		where Id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.yunding.lago.bean.User">
		insert into User (Type, LoginId,
		NickName, Password, RegisterOn,
		LastVisitOn, CreatedOn, RecordStatus,
		ProfilePhotoUrl)
		values (#{type,jdbcType=INTEGER},
		#{loginid,jdbcType=VARCHAR},
		#{nickname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{registeron,jdbcType=TIMESTAMP},
		#{lastvisiton,jdbcType=TIMESTAMP}, #{createdon,jdbcType=TIMESTAMP},
		#{recordstatus,jdbcType=INTEGER},
		#{profilephotourl,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.yunding.lago.bean.User">
		insert into User
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				Id,
			</if>
			<if test="type != null">
				Type,
			</if>
			<if test="loginid != null">
				LoginId,
			</if>
			<if test="nickname != null">
				NickName,
			</if>
			<if test="password != null">
				Password,
			</if>
			<if test="registeron != null">
				RegisterOn,
			</if>
			<if test="lastvisiton != null">
				LastVisitOn,
			</if>
			<if test="createdon != null">
				CreatedOn,
			</if>
			<if test="recordstatus != null">
				RecordStatus,
			</if>
			<if test="profilephotourl != null">
				ProfilePhotoUrl,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="loginid != null">
				#{loginid,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="registeron != null">
				#{registeron,jdbcType=TIMESTAMP},
			</if>
			<if test="lastvisiton != null">
				#{lastvisiton,jdbcType=TIMESTAMP},
			</if>
			<if test="createdon != null">
				#{createdon,jdbcType=TIMESTAMP},
			</if>
			<if test="recordstatus != null">
				#{recordstatus,jdbcType=INTEGER},
			</if>
			<if test="profilephotourl != null">
				#{profilephotourl,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.yunding.lago.bean.User">
		update User
		<set>
			<if test="type != null">
				Type = #{type,jdbcType=INTEGER},
			</if>
			<if test="loginid != null">
				LoginId = #{loginid,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				NickName = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				Password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="registeron != null">
				RegisterOn = #{registeron,jdbcType=TIMESTAMP},
			</if>
			<if test="lastvisiton != null">
				LastVisitOn = #{lastvisiton,jdbcType=TIMESTAMP},
			</if>
			<if test="createdon != null">
				CreatedOn = #{createdon,jdbcType=TIMESTAMP},
			</if>
			<if test="recordstatus != null">
				RecordStatus = #{recordstatus,jdbcType=INTEGER},
			</if>
			<if test="profilephotourl != null">
				ProfilePhotoUrl = #{profilephotourl,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where Id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yunding.lago.bean.User">
		update User
		set Type = #{type,jdbcType=INTEGER},
		LoginId = #{loginid,jdbcType=VARCHAR},
		NickName = #{nickname,jdbcType=VARCHAR},
		Password = #{password,jdbcType=VARCHAR},
		RegisterOn = #{registeron,jdbcType=TIMESTAMP},
		LastVisitOn = #{lastvisiton,jdbcType=TIMESTAMP},
		CreatedOn = #{createdon,jdbcType=TIMESTAMP},
		RecordStatus = #{recordstatus,jdbcType=INTEGER},
		ProfilePhotoUrl = #{profilephotourl,jdbcType=LONGVARCHAR}
		where Id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.yunding.lago.bean.User">
		update User
		set Type = #{type,jdbcType=INTEGER},
		LoginId = #{loginid,jdbcType=VARCHAR},
		NickName = #{nickname,jdbcType=VARCHAR},
		Password = #{password,jdbcType=VARCHAR},
		RegisterOn = #{registeron,jdbcType=TIMESTAMP},
		LastVisitOn = #{lastvisiton,jdbcType=TIMESTAMP},
		CreatedOn = #{createdon,jdbcType=TIMESTAMP},
		RecordStatus = #{recordstatus,jdbcType=INTEGER}
		where Id = #{id,jdbcType=INTEGER}
	</update>
</mapper>